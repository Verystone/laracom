# docker-compose.yml
version: '3.3'

networks:
  microservice:
    external: true

volumes:
  userdb_data_1: {}
  userdb_data_2: {}
  userdb_data_3: {}
  db_product_data: {}
  grafana_data: {}
  prometheus_data: {}
  etcd_data_1: {}
  etcd_data_2: {}
  etcd_data_3: {}

services:
  laracom-demo-cli:
    build: ./demo-cli
    depends_on:
      - laracom-demo-service
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      MICRO_TRACE_SERVER: "jaeger:6831"
    networks:
      - microservice

  laracom-demo-service:
    build: ./demo-service
    depends_on:
      - etcd1
      - etcd2
      - etcd3
      - jaeger
    environment:
      MICRO_SERVER_ADDRESS: ":9091"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      ENABLE_REMOTE_CONFIG: "false"
      MICRO_TRACE_SERVER: "jaeger:6831"
    networks:
      - microservice

  laracom-demo-api:
    build: ./demo-api
    depends_on:
      - laracom-demo-service
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      MICRO_TRACE_SERVER: "jaeger:6831"
    networks:
      - microservice

  laracom-user-service:
    build: ./user-service
    depends_on:
      - kingshard
      - laracom-nats
      - etcd1
      - etcd2
      - etcd3
    environment:
      MICRO_SERVER_ADDRESS: ":9091"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      MICRO_BROKER: "nats"
      MICRO_BROKER_ADDRESS: "laracom-nats:4222"
      DB_HOST: "kingshard:9696"
      DB_NAME: "laracom_user"
      DB_USER: "kingshard"
      DB_PASSWORD: "kingshard"
    networks:
      - microservice

  laracom-product-service:
    image: laracom/productservice
    depends_on:
      - laracom-product-db
      - etcd1
      - etcd2
      - etcd3
      - jaeger
    environment:
      MICRO_SERVER_ADDRESS: ":9091"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
      DB_HOST: "laracom-product-db:3306"
      DB_NAME: "laracom_product"
      DB_USER: "product"
      DB_PASSWORD: "test"
      MICRO_LOG_LEVEL: "debug"
    networks:
      - microservice

  laracom-micro-api:
    image: microhq/micro:latest
    links:
      - laracom-demo-api
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
    ports:
      - 8080:8080
    networks:
      - microservice
    command: api --handler=web --namespace=laracom.api

  laracom-web-dashboard:
    image: microhq/micro:latest
    links:
      - laracom-demo-api
    environment:
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "etcd1:2379,etcd2:2379,etcd3:2379"
    ports:
      - 8082:8082
    networks:
      - microservice
    command: web

  user-db-master:
    env_file:
      - mysql-cluster/user/db.env
    image: mysql/mysql-server:5.7
    volumes:
      - userdb_data_1:/var/lib/mysql
    ports:
      - "3301:3306"
    command: ["mysqld","--server_id=1","--binlog_checksum=NONE","--gtid_mode=ON","--enforce_gtid_consistency=ON","--log_bin=replicas-mysql-bin","--log_slave_updates=ON","--master_info_repository=TABLE","--relay_log_info_repository=TABLE","--transaction_write_set_extraction=XXHASH64","--user=mysql","--skip-host-cache","--skip-name-resolve", "--default_authentication_plugin=mysql_native_password"]
    depends_on:
      - user-db-slave-1
      - user-db-slave-2
    networks:
      - microservice

  user-db-slave-1:
    env_file:
      - mysql-cluster/user/db.env
    image: mysql/mysql-server:5.7
    volumes:
      - userdb_data_2:/var/lib/mysql
    ports:
      - "3302:3306"
    command: ["mysqld","--server_id=2","--binlog_checksum=NONE","--gtid_mode=ON","--enforce_gtid_consistency=ON","--log_bin","--log_slave_updates=ON","--master_info_repository=TABLE","--relay_log_info_repository=TABLE","--transaction_write_set_extraction=XXHASH64","--user=mysql","--skip-host-cache","--skip-name-resolve", "--default_authentication_plugin=mysql_native_password"]
    networks:
      - microservice

  user-db-slave-2:
    env_file:
      - mysql-cluster/user/db.env
    image: mysql/mysql-server:5.7
    volumes:
      - userdb_data_3:/var/lib/mysql
    ports:
      - "3303:3306"
    command: ["mysqld","--server_id=3","--binlog_checksum=NONE","--gtid_mode=ON","--enforce_gtid_consistency=ON","--log_bin","--log_slave_updates=ON","--master_info_repository=TABLE","--relay_log_info_repository=TABLE","--transaction_write_set_extraction=XXHASH64","--user=mysql","--skip-host-cache","--skip-name-resolve", "--default_authentication_plugin=mysql_native_password"]
    networks:
      - microservice

  kingshard:
    image: matjazmav/kingshard
    volumes:
      - ./mysql-cluster/user/ks.yaml:/etc/ks.yaml
    ports:
      - "9696:9696"
    expose:
      - "9696"
    depends_on:
      - user-db-master
    restart: always
    networks:
      - microservice

  laracom-product-db:
    image: mysql:5.7
    ports:
      - 33062:3306
    volumes:
      - db_product_data:/var/lib/mysql
    environment:
      MYSQL_USER: "product"
      MYSQL_PASSWORD: "test"
      MYSQL_DATABASE: "laracom_product"
      MYSQL_ROOT_PASSWORD: "root"
    networks:
      - microservice

  laracom-nats:
    image: nats:latest
    ports:
      - 4222:4222
      - 8222:8222
      - 6222:6222
    networks:
      - microservice

  etcd1:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd1"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd1:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd1:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23791:2379
      - 23801:2380
    networks:
      - microservice
    volumes:
      - etcd_data_1:/bitnami/etcd

  etcd2:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd2"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd2:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd2:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23792:2379
      - 23802:2380
    networks:
      - microservice
    volumes:
      - etcd_data_2:/bitnami/etcd

  etcd3:
    image: bitnami/etcd:latest
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_NAME: "etcd3"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://etcd3:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd3:2379"
      ETCD_INITIAL_CLUSTER_TOKEN: "etcd-cluster"
      ETCD_INITIAL_CLUSTER: "etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380"
      ETCD_INITIAL_CLUSTER_STATE: "new"
    ports:
      - 23793:2379
      - 23803:2380
    networks:
      - microservice
    volumes:
      - etcd_data_3:/bitnami/etcd

  e3w:
    image: soyking/e3w:latest
    ports:
      - "8088:8080"
    volumes:
      - ./conf/e3w/config.ini:/app/conf/config.default.ini
    networks:
      - microservice

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./conf/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - microservice

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - microservice

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9993:9093
    volumes:
      - ./conf/alertmanager/:/etc/alertmanager/
    networks:
      - microservice
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8083:8080
    networks:
      - microservice

  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./conf/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./conf/grafana/config.monitoring
    networks:
      - microservice

  jaeger:
    image: jaegertracing/all-in-one:1.6
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: "9411"
    ports:
      - "5775:5775/udp"
      - "5778:5778"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "9411:9411"
      - "14268:14268"
      - "16686:16686"
    networks:
      - microservice

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8090:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - microservice